prometheus.remote_write "grafana_cloud" {
	endpoint {
		url = sys.env("GRAFANA_PROMETHEUS_URL")

		basic_auth {
			username = sys.env("GRAFANA_PROMETHEUS_USERNAME")
			password = sys.env("GRAFANA_PROMETHEUS_PASSWORD")
		}
	}
}

prometheus.exporter.unix "integrations_node_exporter" {
	disable_collectors = ["ipvs", "btrfs", "infiniband", "xfs", "zfs"]

	filesystem {
		fs_types_exclude     = "^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|tmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$"
		mount_points_exclude = "^/(dev|proc|run/credentials/.+|sys|var/lib/docker/.+)($|/)"
		mount_timeout        = "5s"
	}

	netclass {
		ignored_devices = "^(veth.*|cali.*|[a-f0-9]{15})$"
	}

	netdev {
		device_exclude = "^(veth.*|cali.*|[a-f0-9]{15})$"
	}
}

discovery.relabel "integrations_node_exporter" {
	targets = prometheus.exporter.unix.integrations_node_exporter.targets

	rule {
		target_label = "job"
		replacement  = "integrations/node_exporter"
	}

	rule {
		target_label = "hostname"
		replacement  = sys.env("HOSTNAME")
	}

	rule {
		target_label = "instance"
		replacement  = sys.env("SERVER_IP")
	}
}

prometheus.scrape "integrations_node_exporter" {
	targets    = discovery.relabel.integrations_node_exporter.output
	forward_to = [prometheus.relabel.integrations_node_exporter.receiver]
}

prometheus.relabel "integrations_node_exporter" {
	forward_to = [prometheus.remote_write.grafana_cloud.receiver]

	rule {
		source_labels = ["__name__"]
		regex         = "node_scrape_collector_.+"
		action        = "drop"
	}
}
