#!/bin/bash

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ VPN –Ω–æ–¥—ã
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: curl ... | bash -s {SSL_CERT} {SPEEDTEST_SERVERS} {FLEET_URL} {FLEET_USERNAME} {FLEET_PASSWORD} {METRICS_USER} {METRICS_PASS} {EMAIL} {DOMAIN}

set -e

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
SSL_CERT="$1"
SPEEDTEST_SERVERS="$2"
FLEET_URL="$3"
FLEET_USERNAME="$4"
FLEET_PASSWORD="$5"
METRICS_USER="${6:-}"
METRICS_PASS="${7:-}"
EMAIL="${8:-}"
DOMAIN="${9:-}"

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
SPEEDTEST_INTERVAL=60

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
if [ -z "$SSL_CERT" ] || [ -z "$FLEET_URL" ] || [ -z "$FLEET_USERNAME" ] || [ -z "$FLEET_PASSWORD" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É–∫–∞–∑–∞–Ω—ã"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
    echo "curl -fsSL ... | bash -s SSL_CERT SPEEDTEST_SERVERS FLEET_URL FLEET_USERNAME FLEET_PASSWORD [METRICS_USER] [METRICS_PASS]"
    echo ""
    echo "–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:"
    echo "  SSL_CERT           - SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏–∑ –ø–∞–Ω–µ–ª–∏ Remnawave"
    echo "  FLEET_URL          - URL Fleet Management –¥–ª—è Grafana Alloy"
    echo "  FLEET_USERNAME     - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Fleet Management"
    echo "  FLEET_PASSWORD     - –ü–∞—Ä–æ–ª—å Fleet Management"
    echo ""
    echo "–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:"
    echo "  SPEEDTEST_SERVERS  - ID —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è speedtest (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
    echo "  METRICS_USER       - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è basic_auth –º–µ—Ç—Ä–∏–∫ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
    echo "  METRICS_PASS       - –ü–∞—Ä–æ–ª—å –¥–ª—è basic_auth –º–µ—Ç—Ä–∏–∫ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
    echo "  EMAIL              - Email –¥–ª—è Let's Encrypt (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
    echo "  DOMAIN             - –î–æ–º–µ–Ω –¥–ª—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
    echo ""
    echo "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
    echo "  SPEEDTEST_INTERVAL - –ò–Ω—Ç–µ—Ä–≤–∞–ª speedtest: 60 —Å–µ–∫—É–Ω–¥"
    exit 1
fi

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ VPN –Ω–æ–¥—ã"
echo "=================================="
echo "Speedtest –∏–Ω—Ç–µ—Ä–≤–∞–ª: $SPEEDTEST_INTERVAL —Å–µ–∫ (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)"
echo ""

# 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Docker Compose
echo "1Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Docker Compose..."
echo "======================================="

curl -fsSL -H 'Cache-Control: no-cache' -H 'Pragma: no-cache' "https://raw.githubusercontent.com/Beniamiiin/vpnnode/master/docker-install/run.sh?nocache=$(uuidgen)" | bash

echo "‚úÖ Docker –∏ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
echo ""

# 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ shell –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "2Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ shell –æ–∫—Ä—É–∂–µ–Ω–∏—è (zsh + oh-my-zsh)..."
echo "================================================="

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º zsh –∏ oh-my-zsh
echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ zsh, curl, git –∏ oh-my-zsh..."
apt-get update && apt-get install -y zsh curl git
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–ª–∞–≥–∏–Ω—ã –∏ –±–∞–∑–æ–≤—ã–µ –∞–ª–∏–∞—Å—ã
echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤ –∏ –∞–ª–∏–∞—Å–æ–≤..."
sed -i 's/^plugins=(.*)/plugins=(sudo common-aliases z history)/' ~/.zshrc
grep -qxF "alias zshrc='nano ~/.zshrc'" ~/.zshrc || echo "alias zshrc='nano ~/.zshrc'" >> ~/.zshrc
grep -qxF "alias reload='source ~/.zshrc'" ~/.zshrc || echo "alias reload='source ~/.zshrc'" >> ~/.zshrc

# –î–æ–±–∞–≤–ª—è–µ–º –∞–ª–∏–∞—Å –¥–ª—è clear
echo "alias cl='clear'" >> ~/.zshrc

# –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∞–ª–∏–∞—Å—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–¥–æ–π
cat <<'EOF' >> ~/.zshrc

# --- Aliases: Node VPS ---
alias cdnode='cd /opt/remnanode'
alias envnode='nano /opt/remnanode/.env'
alias ymlnode='nano /opt/remnanode/docker-compose.yml'
alias dcnode='cd /opt/remnanode && docker compose down && docker compose up -d && docker compose logs -f'

EOF

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º zsh –∫–∞–∫ shell –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
chsh -s $(which zsh) root

echo "‚úÖ Shell –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
echo ""

# 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Remnawave Node
echo "3Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Remnawave Node..."
echo "=============================="

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
mkdir -p /opt/remnanode
cd /opt/remnanode

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
cat > .env << EOF
APP_PORT=2222
SSL_CERT="$SSL_CERT"
EOF

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p /var/log/remnanode
mkdir -p /var/lib/remnawave/configs/xray/ssl

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ —á–µ—Ä–µ–∑ Let's Encrypt (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã EMAIL –∏ DOMAIN)
if [ -n "$EMAIL" ] && [ -n "$DOMAIN" ]; then
    echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
    echo "==============================="
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
    apt install -y cron socat
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º acme.sh
    curl https://get.acme.sh | sh -s email="$EMAIL"
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Let's Encrypt –∫–∞–∫ CA –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    ~/.acme.sh/acme.sh --set-default-ca --server letsencrypt
    
    # –í—ã–ø—É—Å–∫–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    ~/.acme.sh/acme.sh --issue -d "$DOMAIN" --standalone --force
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ –Ω—É–∂–Ω—É—é –ø–∞–ø–∫—É
    ~/.acme.sh/acme.sh --install-cert -d "$DOMAIN" \
        --key-file /var/lib/remnawave/configs/xray/ssl/cert.key \
        --fullchain-file /var/lib/remnawave/configs/xray/ssl/cert.crt
    
    echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è –¥–æ–º–µ–Ω–∞ $DOMAIN"
    echo ""
fi

# –°–æ–∑–¥–∞–µ–º docker-compose.yml —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
cat > docker-compose.yml << 'EOF'
services:
    remnanode:
        container_name: remnanode
        hostname: remnanode
        image: remnawave/node:latest
        restart: always
        network_mode: host
        env_file:
            - .env
        volumes:
            - '/var/log/remnanode:/var/log/remnanode'
            - '/var/lib/remnawave:/var/lib/remnawave'
EOF

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º logrotate –¥–ª—è —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤
echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤..."
apt-get install -y logrotate

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é logrotate –¥–ª—è Remnawave Node
cat > /etc/logrotate.d/remnanode << 'EOF'
/var/log/remnanode/*.log {
      size 50M
      rotate 5
      compress
      missingok
      notifempty
      copytruncate
  }
EOF

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é logrotate
logrotate -vf /etc/logrotate.d/remnanode > /dev/null 2>&1 || true

# –ó–∞–ø—É—Å–∫–∞–µ–º Remnawave Node
docker compose up -d

echo "‚úÖ Remnawave Node —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 2222"
echo "üìù –õ–æ–≥–∏: /var/log/remnanode/ (—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–æ—Ç–∞—Ü–∏–µ–π)"
echo ""

# 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Speedtest
echo "4Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Speedtest –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
echo "====================================="

if [ -n "$SPEEDTEST_SERVERS" ]; then
    curl -fsSL -H 'Cache-Control: no-cache' -H 'Pragma: no-cache' "https://raw.githubusercontent.com/Beniamiiin/vpnnode/refs/heads/master/speedtest/run.sh?nocache=$(uuidgen)" | bash -s "$SPEEDTEST_INTERVAL" "$SPEEDTEST_SERVERS"
else
    curl -fsSL -H 'Cache-Control: no-cache' -H 'Pragma: no-cache' "https://raw.githubusercontent.com/Beniamiiin/vpnnode/refs/heads/master/speedtest/run.sh?nocache=$(uuidgen)" | bash -s "$SPEEDTEST_INTERVAL"
fi

echo "‚úÖ Speedtest –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
echo ""

# 5. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Grafana Alloy
echo "5Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Grafana Alloy..."
echo "============================="

if [ -n "$METRICS_USER" ] && [ -n "$METRICS_PASS" ]; then
    curl -fsSL -H 'Cache-Control: no-cache' -H 'Pragma: no-cache' "https://raw.githubusercontent.com/Beniamiiin/vpnnode/refs/heads/master/grafana-alloy/run.sh?nocache=$(uuidgen)" | sudo bash -s "$FLEET_URL" "$FLEET_USERNAME" "$FLEET_PASSWORD" "$METRICS_USER" "$METRICS_PASS"
else
    curl -fsSL -H 'Cache-Control: no-cache' -H 'Pragma: no-cache' "https://raw.githubusercontent.com/Beniamiiin/vpnnode/refs/heads/master/grafana-alloy/run.sh?nocache=$(uuidgen)" | sudo bash -s "$FLEET_URL" "$FLEET_USERNAME" "$FLEET_PASSWORD"
fi

echo "‚úÖ Grafana Alloy —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
echo ""

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "=========================="
echo ""
echo "üìã –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:"
echo "‚Ä¢ Docker –∏ Docker Compose"
echo "‚Ä¢ Zsh + Oh My Zsh (—É–¥–æ–±–Ω–æ–µ shell –æ–∫—Ä—É–∂–µ–Ω–∏–µ)"
echo "‚Ä¢ Remnawave Node (–ø–æ—Ä—Ç 2222)"
if [ -n "$EMAIL" ] && [ -n "$DOMAIN" ]; then
    echo "‚Ä¢ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã Let's Encrypt –¥–ª—è –¥–æ–º–µ–Ω–∞ $DOMAIN"
fi
echo "‚Ä¢ Speedtest –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (–∏–Ω—Ç–µ—Ä–≤–∞–ª $SPEEDTEST_INTERVAL —Å–µ–∫, —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)"
echo "‚Ä¢ Grafana Alloy (–∞–≥–µ–Ω—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞)"
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤:"
echo "‚Ä¢ docker ps - —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
echo "‚Ä¢ systemctl status alloy - —Å—Ç–∞—Ç—É—Å Grafana Alloy"
echo ""
echo "üìä –õ–æ–≥–∏:"
echo "‚Ä¢ docker logs remnanode - –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ Remnawave Node"
echo "‚Ä¢ tail -f /var/log/remnanode/*.log - —Ñ–∞–π–ª–æ–≤—ã–µ –ª–æ–≥–∏ Remnawave Node"
echo "‚Ä¢ docker logs speedtest-exporter - –ª–æ–≥–∏ Speedtest"
echo "‚Ä¢ journalctl -u alloy -f - –ª–æ–≥–∏ Grafana Alloy"
if [ -n "$EMAIL" ] && [ -n "$DOMAIN" ]; then
    echo "‚Ä¢ ~/.acme.sh/acme.sh --list - —Å–ø–∏—Å–æ–∫ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤"
fi
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∞–ª–∏–∞—Å—ã (–¥–æ—Å—Ç—É–ø–Ω—ã –≤ zsh –ø–æ—Å–ª–µ –Ω–æ–≤–æ–π SSH —Å–µ—Å—Å–∏–∏):"
echo "‚Ä¢ cdnode - –ø–µ—Ä–µ–π—Ç–∏ –≤ –ø–∞–ø–∫—É –Ω–æ–¥—ã"
echo "‚Ä¢ envnode - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env —Ñ–∞–π–ª"
echo "‚Ä¢ ymlnode - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å docker-compose.yml"
echo "‚Ä¢ dcnode - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É —Å –ª–æ–≥–∞–º–∏"
echo "‚Ä¢ cl - –æ—á–∏—Å—Ç–∏—Ç—å —ç–∫—Ä–∞–Ω"
echo "‚Ä¢ zshrc - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å ~/.zshrc"
echo "‚Ä¢ reload - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å ~/.zshrc"
echo ""
echo "üîÑ –†–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (50MB, 5 —Ñ–∞–π–ª–æ–≤)" 